// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using petshop.Data;

#nullable disable

namespace petshop.Migrations
{
    [DbContext(typeof(PetShopContextDb))]
    partial class PetShopContextDbModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LichHen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("DichVuId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayDat")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenKhach")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LichHens");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("petshop.Models.Cart", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int?>("productId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("productId");

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("petshop.Models.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("SentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("ContactMessages");
                });

            modelBuilder.Entity("petshop.Models.danhmuc", b =>
                {
                    b.Property<int>("danhmucid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("danhmucid"));

                    b.Property<string>("danhmucname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("danhmucid");

                    b.ToTable("danhmucs");

                    b.HasData(
                        new
                        {
                            danhmucid = 1,
                            danhmucname = "Thức ăn "
                        },
                        new
                        {
                            danhmucid = 2,
                            danhmucname = "Phụ kiện"
                        },
                        new
                        {
                            danhmucid = 3,
                            danhmucname = "Đồ chơi "
                        },
                        new
                        {
                            danhmucid = 4,
                            danhmucname = "Thuốc "
                        });
                });

            modelBuilder.Entity("petshop.Models.dichvu", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("dichviPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("dichvuDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("dichvuName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("img")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("dichvus");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            dichviPrice = 200000m,
                            dichvuDescription = "Dịch vụ chăm sóc toàn diện bao gồm tắm rửa, cắt tỉa lông, và kiểm tra sức khỏe cơ bản.",
                            dichvuName = "Chăm sóc thú cưng",
                            img = "https://images.unsplash.com/photo-1583512603805-3cc6b41f3edb?ixlib=rb-4.0.3&auto=format&fit=crop&w=1350&q=80"
                        },
                        new
                        {
                            Id = 2,
                            dichviPrice = 250000m,
                            dichvuDescription = "Dịch vụ spa cao cấp cho thú cưng gồm tắm nước ấm, massage nhẹ nhàng và chăm sóc lông mềm mượt.",
                            dichvuName = "Spa thú cưng thư giãn",
                            img = "https://encrypted-tbn3.gstatic.com/shopping?q=tbn:ANd9GcQOr2pvyZ7dan2ZdF2SLnOCAZ1y5H66Tos7JgW2Rt3Lw9rHEHHx9cbvmA655ZsT255bZZNqdB5fKfkcnIXt38F7GZZku0FYdm_yP9NmVZjvFnrCRW4N_vt5oQ"
                        },
                        new
                        {
                            Id = 3,
                            dichviPrice = 150000m,
                            dichvuDescription = "Dịch vụ tắm gội bằng sữa tắm chuyên dụng, kết hợp vệ sinh tai sạch sẽ cho thú cưng.",
                            dichvuName = "Tắm rửa và vệ sinh tai",
                            img = "https://iupets.vn/wp-content/uploads/2020/05/dich_vu_tam_cho_meo_gia_re.jpg"
                        },
                        new
                        {
                            Id = 4,
                            dichviPrice = 100000m,
                            dichvuDescription = "Dịch vụ cắt móng tay, móng chân và làm sạch bàn chân chuyên nghiệp cho chó mèo.",
                            dichvuName = "Cắt móng và làm sạch bàn chân",
                            img = "https://cdn.tgdd.vn/Files/2021/04/28/1346971/co-nen-cat-mong-cho-meo-khong-cach-cat-mong-cho-meo-don-gian-hieu-qua-202104281357440647.jpg"
                        },
                        new
                        {
                            Id = 5,
                            dichviPrice = 120000m,
                            dichvuDescription = "Dịch vụ cạo lông vùng kín giúp thú cưng sạch sẽ, hạn chế nhiễm khuẩn và mùi hôi.",
                            dichvuName = "Cạo lông vệ sinh vùng kín",
                            img = "https://kokopet.vn/wp-content/uploads/2025/01/Thiet-ke-chua-co-ten-15-1.png"
                        },
                        new
                        {
                            Id = 6,
                            dichviPrice = 80000m,
                            dichvuDescription = "Hỗ trợ chủ nuôi xây dựng chế độ ăn và chăm sóc cơ bản phù hợp với từng giống thú cưng.",
                            dichvuName = "Tư vấn dinh dưỡng và sức khỏe cơ bản",
                            img = "https://product.hstatic.net/200000731893/product/cham-soc-meo_8b9638608af64d62956ff622d3117d54.png"
                        });
                });

            modelBuilder.Entity("petshop.Models.product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("danhmucid")
                        .HasColumnType("int");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("detail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("image")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("istrending")
                        .HasColumnType("bit");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("danhmucid");

                    b.ToTable("products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            danhmucid = 2,
                            description = "Thức ăn Royal Canin được thiết kế đặc biệt để đáp ứng nhu cầu dinh dưỡng của mèo ở mọi lứa tuổi. Thành phần giàu protein, vitamin và khoáng chất giúp mèo khỏe mạnh và lông bóng mượt.",
                            detail = "Thành phần: Protein gà, gạo, ngô, chất xơ thực vật, vitamin A, D3, E...\r\n\r\nTrọng lượng: 2kg\r\n\r\nPhù hợp: Mèo từ 6 tháng tuổi trở lên",
                            image = "https://bizweb.dktcdn.net/thumb/grande/100/348/235/products/e781c917-30a3-4c3d-a2e6-bdf5432c9eaf.jpg",
                            istrending = true,
                            name = "Cát vệ sinh cho mèo",
                            price = 1000000m
                        },
                        new
                        {
                            Id = 2,
                            danhmucid = 1,
                            description = "Thức ăn hạt dành cho mèo sống trong nhà, giúp kiểm soát lông rụng và giảm mùi phân.",
                            detail = "Thành phần: Protein gà, ngô, chất xơ, vitamin...\r\n\r\nTrọng lượng: 2kg\r\n\r\nPhù hợp: Mèo trưởng thành",
                            image = "https://down-vn.img.susercontent.com/file/vn-11134207-7r98o-m04hrajmdip91c",
                            istrending = true,
                            name = "Cat Foods",
                            price = 320000m
                        },
                        new
                        {
                            Id = 3,
                            danhmucid = 2,
                            description = "Bát ăn inox cao cấp không gỉ, dễ vệ sinh và an toàn cho mèo.",
                            detail = "Chất liệu: Inox 304\r\n\r\nĐường kính: 15cm\r\n\r\nMàu sắc: Bạc",
                            image = "https://product.hstatic.net/200000264739/product/bat_an_don_inox_cao_cap_van_trai_tim_cho_cho_meo_2_42709d2ac68b4fce874c17975a091cac_master.jpg",
                            istrending = false,
                            name = "Bát ăn inox cho mèo",
                            price = 45000m
                        },
                        new
                        {
                            Id = 4,
                            danhmucid = 2,
                            description = "Phụ kiện giúp mèo cào móng, vui chơi và vận động tại nhà.",
                            detail = "Chất liệu: Gỗ ép, vải nỉ\r\n\r\nChiều cao: 70cm\r\n\r\nMàu sắc: Xám",
                            image = "https://down-vn.img.susercontent.com/file/vn-11134207-7r98o-lz7fabp7r99d4e",
                            istrending = true,
                            name = "Cây cào móng 3 tầng cho mèo",
                            price = 260000m
                        },
                        new
                        {
                            Id = 5,
                            danhmucid = 3,
                            description = "Chuột đồ chơi mềm, có lông mô phỏng như thật, giúp mèo giải trí và vận động.",
                            detail = "Chất liệu: Vải lông, nhựa\r\n\r\nChiều dài: 8cm\r\n\r\nMàu sắc: Trắng, nâu",
                            image = "https://product.hstatic.net/200000264739/product/chuot_long_30441f2fd56a4ac38b52f4a42e78fcb9_master.jpg",
                            istrending = false,
                            name = "Chuột đồ chơi có lông",
                            price = 20000m
                        },
                        new
                        {
                            Id = 6,
                            danhmucid = 3,
                            description = "Cần câu có lông vũ tạo hứng thú chơi đùa cho mèo, tăng vận động và tương tác.",
                            detail = "Chiều dài: 45cm\r\n\r\nChất liệu: Nhựa, lông vũ\r\n\r\nPhù hợp: Mọi giống mèo",
                            image = "https://down-vn.img.susercontent.com/file/3a50c8e02c615173c2dafd844273bda2",
                            istrending = true,
                            name = "Cần câu lông cho mèo",
                            price = 30000m
                        },
                        new
                        {
                            Id = 7,
                            danhmucid = 1,
                            description = "Pate mềm dễ ăn, giàu omega 3 từ cá hồi.",
                            detail = "Khối lượng: 85g\r\nVị: Cá hồi\r\nPhù hợp: Mèo mọi lứa tuổi",
                            image = "https://samyangvietnam.com/wp-content/uploads/2023/06/Pate-cho-meo-Dish-vi-Ca-ngu-trang-Ca-hoi.jpg",
                            istrending = true,
                            name = "Pate cho mèo vị cá hồi",
                            price = 28000m
                        },
                        new
                        {
                            Id = 8,
                            danhmucid = 1,
                            description = "Giảm rụng lông, dễ tiêu hóa, dành cho mèo lông dài.",
                            detail = "Khối lượng: 1.5kg\r\nHãng: Royal Cat\r\nVị: Gà",
                            image = "https://www.vietpet.net/wp-content/uploads/2020/07/thuc-an-cho-meo-truong-thanh-long-dai-equilibrio-adult-cat-long-hair.jpg",
                            istrending = false,
                            name = "Thức ăn khô cho mèo lông dài",
                            price = 135000m
                        },
                        new
                        {
                            Id = 9,
                            danhmucid = 1,
                            description = "Bánh mềm thơm ngon, phù hợp huấn luyện.",
                            detail = "Khối lượng: 100g\r\nHình dạng nhỏ gọn\r\nKhông chất bảo quản",
                            image = "https://image.made-in-china.com/202f0j00zAPhbfJyGeow/Beef-Flavor-Sticks-and-Cubes-Dog-Treats-Pet-Food-OEM-China.webp",
                            istrending = false,
                            name = "Bánh thưởng vị gà cho chó",
                            price = 45000m
                        },
                        new
                        {
                            Id = 10,
                            danhmucid = 1,
                            description = "Dành riêng cho chó con cần bổ sung canxi và dưỡng chất.",
                            detail = "Khối lượng: 1kg\r\nVị: Sữa\r\nĐộ tuổi: 1–12 tháng",
                            image = "https://kinpetshop.com/wp-content/uploads/thuc-an-hat-smartheart-danh-cho-cho-con-vi-bo-va-sua-.jpg",
                            istrending = true,
                            name = "Thức ăn cho chó con vị sữa",
                            price = 110000m
                        },
                        new
                        {
                            Id = 11,
                            danhmucid = 1,
                            description = "Xúc xích mềm, giàu đạm, dễ tiêu hóa.",
                            detail = "Gói 5 cây\r\nVị: Bò\r\nThích hợp thưởng hoặc bổ sung dinh dưỡng",
                            image = "https://bizweb.dktcdn.net/thumb/grande/100/448/728/products/0eb97941-3a66-4d93-816a-3e0f30a5bc26.jpg?v=1740718268027",
                            istrending = false,
                            name = "Xúc xích cho mèo vị bò",
                            price = 18000m
                        },
                        new
                        {
                            Id = 12,
                            danhmucid = 2,
                            description = "Áo ấm xinh xắn cho thú cưng mặc mùa lạnh.",
                            detail = "Chất liệu: Nỉ bông\r\nSize: S – XL\r\nMàu: Đỏ, Xám, Xanh",
                            image = "https://down-vn.img.susercontent.com/file/vn-11134207-7r98o-ln771hvcoa1k52",
                            istrending = true,
                            name = "Áo hoodie cho chó mèo",
                            price = 75000m
                        },
                        new
                        {
                            Id = 13,
                            danhmucid = 2,
                            description = "Luôn có nước sạch cho mèo, dung tích lớn.",
                            detail = "Dung tích: 2.5L\r\nChất liệu: Nhựa ABS\r\nDễ vệ sinh",
                            image = "https://www.petmart.vn/wp-content/uploads/2023/05/bo-bat-an-binh-nuoc-tu-dong-cho-cho-meo-paw-opaque-food-water-feeder4.jpg",
                            istrending = false,
                            name = "Bình nước uống tự động cho mèo",
                            price = 120000m
                        },
                        new
                        {
                            Id = 14,
                            danhmucid = 2,
                            description = "Dễ gấp gọn, khung chắc chắn, có khay vệ sinh.",
                            detail = "Size: 60x45x50cm\r\nChất liệu: Sắt sơn tĩnh điện",
                            image = "https://down-vn.img.susercontent.com/file/vn-11134207-7qukw-lk8yvh3djt1013",
                            istrending = true,
                            name = "Chuồng lưới gấp gọn cho chó",
                            price = 350000m
                        },
                        new
                        {
                            Id = 15,
                            danhmucid = 2,
                            description = "Tiện lợi đựng cả thức ăn và nước, chống trượt.",
                            detail = "Chất liệu: Nhựa PP\r\nKích thước: 30x15cm",
                            image = "https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQQiRjbpYDnxItiN5vCyXxVXlUKIMxod-k1gw&s",
                            istrending = false,
                            name = "Máng ăn đôi cho chó mèo",
                            price = 65000m
                        },
                        new
                        {
                            Id = 16,
                            danhmucid = 2,
                            description = "Khô nhanh, thấm nước cực tốt, mềm mại.",
                            detail = "Kích thước: 60x100cm\r\nChất liệu: Sợi microfiber",
                            image = "https://down-vn.img.susercontent.com/file/ec6d9fd86b573fa7097c81f2924233e1",
                            istrending = true,
                            name = "Khăn tắm thú cưng siêu thấm",
                            price = 40000m
                        },
                        new
                        {
                            Id = 17,
                            danhmucid = 3,
                            description = "Chuột máy chạy tự động, thu hút mèo đuổi bắt.",
                            detail = "Chạy bằng pin AA\r\nChất liệu: Nhựa mềm\r\nKích thước: 12cm",
                            image = "https://product.hstatic.net/200000263355/product/z4470610677922_b0082c16453b00e838ef44bf3fd330e5_ebd023487d514c019c06bd0d36862807_master.jpg",
                            istrending = true,
                            name = "Chuột đồ chơi chạy pin",
                            price = 59000m
                        },
                        new
                        {
                            Id = 18,
                            danhmucid = 3,
                            description = "Phát tiếng kêu khi cắn, giúp giảm căng thẳng.",
                            detail = "Chất liệu: Cao su mềm\r\nKích thước: 15cm\r\nMàu: Vàng, hồng",
                            image = "https://miluxinh.com/wp-content/uploads/2022/05/136-xuong-cao-su-5.jpg",
                            istrending = false,
                            name = "Xương cao su phát âm cho chó",
                            price = 30000m
                        },
                        new
                        {
                            Id = 19,
                            danhmucid = 3,
                            description = "Cần câu dài, lông mềm có chuông thu hút mèo chơi.",
                            detail = "Chiều dài: 50cm\r\nChất liệu: Nhựa + lông vũ",
                            image = "https://down-vn.img.susercontent.com/file/vn-11134207-7r98o-lxa17zvlb8pndb",
                            istrending = false,
                            name = "Cần câu lông có chuông",
                            price = 32000m
                        },
                        new
                        {
                            Id = 20,
                            danhmucid = 3,
                            description = "Bóng phát sáng khi lăn, giúp mèo chơi cả buổi tối.",
                            detail = "Pin tích hợp\r\nTự động xoay\r\nĐường kính: 6cm",
                            image = "https://assets.aemi.vn/images_resized/2024/9/5/1725548389447-465935",
                            istrending = true,
                            name = "Quả bóng thông minh phát sáng",
                            price = 95000m
                        },
                        new
                        {
                            Id = 21,
                            danhmucid = 3,
                            description = "Bánh xe không gây ồn, cho hamster vận động mỗi ngày.",
                            detail = "Đường kính: 18cm\r\nChất liệu: Nhựa dày",
                            image = "https://www.ubuy.vn/productimg/?image=aHR0cHM6Ly9tLm1lZGlhLWFtYXpvbi5jb20vaW1hZ2VzL0kvNDFDWkYxTStvb0wuX1NTNDAwXy5qcGc.jpg",
                            istrending = false,
                            name = "Bánh xe chạy cho hamster",
                            price = 55000m
                        },
                        new
                        {
                            Id = 22,
                            danhmucid = 4,
                            description = "Làm dịu và sát khuẩn nhẹ vùng mắt bị viêm.",
                            detail = "Dung tích: 10ml\r\nThành phần: Dung dịch sinh lý, kháng khuẩn nhẹ",
                            image = "https://product.hstatic.net/200000350119/product/nho_mat_bio-gentadrop_c9f7984dd9d24410b938c0cf9f86583e_large.jpg",
                            istrending = true,
                            name = "Thuốc nhỏ mắt cho chó mèo",
                            price = 70000m
                        },
                        new
                        {
                            Id = 23,
                            danhmucid = 4,
                            description = "Giúp dưỡng móng, giảm khô nứt móng chân.",
                            detail = "Dung tích: 30ml\r\nThành phần: Vitamin E, dầu dưỡng",
                            image = "https://encrypted-tbn2.gstatic.com/shopping?q=tbn:ANd9GcSt22RpGPKIqtt3cdPdLWYRl9JStjhRpb3Y3cyU-E_5tJcNFQ2ha5KMjUwFBTijsPPiaOAW99aBzdKrz3TygDioTEIE-ieoiZ7XFtzHy4scWCbj7DQFnZVL",
                            istrending = false,
                            name = "Gel dưỡng móng chân thú cưng",
                            price = 55000m
                        },
                        new
                        {
                            Id = 24,
                            danhmucid = 4,
                            description = "Ngăn ngừa và diệt ve rận cho chó mèo trong 1 tháng.",
                            detail = "Gói 1ml\r\nSử dụng 1 lần/tháng\r\nKhông độc hại",
                            image = "https://encrypted-tbn2.gstatic.com/shopping?q=tbn:ANd9GcS5o1ji-LB-r9OhjdasKBufIudKwsfpIJq6hhI5EfGR4xq1NL2zE65gkhHBu-C2PNXpFSGTs18bPGjpABCDzddfO5UgwYs02LQbhlv0SOH1wexrM-QkMyPY7w",
                            istrending = true,
                            name = "Thuốc nhỏ gáy phòng ve rận BioPet",
                            price = 99000m
                        },
                        new
                        {
                            Id = 25,
                            danhmucid = 4,
                            description = "Không cần nước, tiện lợi tắm khô khử mùi cho mèo.",
                            detail = "Dung tích: 100g\r\nMùi: Dâu\r\nDùng 1–2 lần/tuần",
                            image = "https://encrypted-tbn2.gstatic.com/shopping?q=tbn:ANd9GcTVWn-Qkahi7U3FbPGzV6yMQsHfvC6GSU4UiQFKUiPtXwd6-n5ATMvM4ufUaBe1jlhPzbn6ulOpbkmFIpMYPWsore604okaUMaXb32d5A9Yd6wFCXAIjk-shA",
                            istrending = false,
                            name = "Bột tắm khô cho mèo",
                            price = 50000m
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("petshop.Models.Cart", b =>
                {
                    b.HasOne("petshop.Models.product", "product")
                        .WithMany()
                        .HasForeignKey("productId");

                    b.Navigation("product");
                });

            modelBuilder.Entity("petshop.Models.product", b =>
                {
                    b.HasOne("petshop.Models.danhmuc", "danhmucs")
                        .WithMany("products")
                        .HasForeignKey("danhmucid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("danhmucs");
                });

            modelBuilder.Entity("petshop.Models.danhmuc", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
